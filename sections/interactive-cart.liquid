<style>
	.interactive-cart {
			position: relative;
			height: 0;
	}

  .interactive-cart__background {
		  visibility: hidden;
		  background-color: rgba(0,0,0,0.5);
      position: fixed;
      top: 0;
		  left: 0;
		  width: 100vw;
		  height: 100vh;
      z-index: 9999;
		  opacity: 0;
		  transition: opacity .5s ease;
  }

  .interactive-cart__background.is-visible {
		  visibility: visible;
		  opacity: 1;
  }

  .cart-btn {
		  position: fixed;
		  top: 0;
		  right: 0;
		  z-index: 9999;
  }

  .interactive-cart__sidebar {
		  position: fixed;
      z-index: 9999;
      top: 0;
		  right: 0;
		  width: 400px;
		  max-width: 90%;
		  height: 100vh;
      background: rgb(var(--color-base-background-1));
		  opacity: 0;
		  visibility: hidden;
		  transform: translateX(70%);
		  transition: transform .3s ease;
		  overflow-y: auto;
  }
  .interactive-cart__sidebar.is-open {
		  transform: translateX(0);
		  visibility: visible;
		  opacity: 1;
  }
</style>

<interactive-cart class="interactive-cart">
	<div data-id="interactive-cart-background" class="interactive-cart__background">''</div>
	<div tabindex="999" data-id="interactive-cart-sidebar" class="interactive-cart__sidebar">
		<h2>Hello cart</h2>
		<button aria-label="Close" data-id="interactive-cart-close-btn" class="cart-btn">hide</button>
		<button>First</button>
		<button>Second</button>
		<button>Last</button>
	</div>
</interactive-cart>

<script>
	class InteractiveCart extends HTMLElement {
    constructor() {
      super();
      this.elements = {
        background: this.querySelector('[data-id="interactive-cart-background"]'),
        openCartBtn: document.querySelector('#cart-icon-bubble'),
        closeCartBtn: this.querySelector('[data-id="interactive-cart-close-btn"]'),
        sidebar: this.querySelector('[data-id="interactive-cart-sidebar"]')
      }

      this.addKeyboardHandlers()

      this.elements.background.addEventListener('click', this.hideCart.bind(this))
      this.elements.closeCartBtn.addEventListener('click', this.hideCart.bind(this))
      this.elements.openCartBtn.addEventListener('click', this.showCart.bind(this))
    }

    addKeyboardHandlers() {
      document.onkeydown = (e) => {
        if(e.key === 'Escape' || e.key === 'Esc') {
          this.hideCart()
        }
      }
    }

    hideCart() {
      this.elements.background.classList.remove('is-visible')
	    this.elements.sidebar.classList.remove('is-open')
    }

    showCart(e) {
      e.preventDefault()
      this.elements.background.classList.add('is-visible')
	    this.elements.sidebar.classList.add('is-open')
	    this.elements.sidebar.focus()
    }
	}

  customElements.define('interactive-cart', InteractiveCart)
</script>
