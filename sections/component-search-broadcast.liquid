<link rel="stylesheet" href="{{ 'component-search-broadcast.css' | asset_url }}" media="print" onload="this.media='all'">
<noscript>{{ 'component-search-broadcast.css' | asset_url | stylesheet_tag }}</noscript>

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}
<search-broadcast data-event-name="{{ section.settings.event_name }}" class="color-{{ section.settings.color_scheme }} gradient">
	<div class="page-width page-width--narrow section-{{ section.id }}-padding">
	  <div class="component-search-broadcast__wrap">
	    <div class="component-search-broadcast__icon-wrap">
	      <svg class="icon icon-search component-search-broadcast__icon">
	        <use xlink:href="#icon-search">
	      </svg>
	    </div>
	    <input placeholder="{{ section.settings.placeholder }}" class="component-search-broadcast__input" type="text">
	  </div>
	</div>
</search-broadcast>
{% javascript %}
  class SearchBroadcast extends HTMLElement {
    constructor() {
      super();

      this.elements = {
        input: this.querySelector('input')
      }

      this.eventName = this.getAttribute('data-event-name')

      if(!this.eventName) throw new Error('please specify the event name in Search Broadcast section')

      this.elements.input.addEventListener('input', this.handleInput.bind(this))
    }

    handleInput() {
      if(!eventBus) {
        console.warn('Instance of EventBus not found')
        return
      }
      eventBus.emit(this.eventName, this.elements.input.value)
    }
  }
  customElements.define('search-broadcast', SearchBroadcast)
{% endjavascript %}

{% schema %}
    {
      "name": "Search broadcast",
      "tag": "section",
      "class": "section",
      "settings": [
        {
          "type": "text",
          "id": "event_name",
          "label": "Event name",
          "info": "An event name that will be broadcasting via EventBus"
        },
        {
          "type": "text",
          "id": "placeholder",
          "label": "Placeholder",
          "default": "Search"
        },
        {
          "type": "range",
          "id": "padding_top",
          "min": 0,
          "max": 100,
          "step": 4,
          "unit": "px",
          "label": "t:sections.all.padding.padding_top",
          "default": 36
        },
        {
          "type": "range",
          "id": "padding_bottom",
          "min": 0,
          "max": 100,
          "step": 4,
          "unit": "px",
          "label": "t:sections.all.padding.padding_bottom",
          "default": 36
        },
        {
          "type": "select",
          "id": "color_scheme",
          "options": [
            {
              "value": "accent-1",
              "label": "t:sections.all.colors.accent_1.label"
            },
            {
              "value": "accent-2",
              "label": "t:sections.all.colors.accent_2.label"
            },
            {
              "value": "background-1",
              "label": "t:sections.all.colors.background_1.label"
            },
            {
              "value": "background-2",
              "label": "t:sections.all.colors.background_2.label"
            },
            {
              "value": "inverse",
              "label": "t:sections.all.colors.inverse.label"
            }
          ],
          "default": "background-1",
          "label": "t:sections.all.colors.label"
        }
      ],
      "presets": [{
        "name": "Search broadcast",
        "category": "Search"
      }]
    }
{% endschema %}
